/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

/*! Generated by Font Squirrel (https://www.fontsquirrel.com) on August 27, 2019 */
@font-face {
  font-family: 'labelleaurore';
  src: url("../fonts/labelleaurore/labelleaurore.eot");
  src: url("../fonts/labelleaurore/labelleaurore.eot?#iefix") format("embedded-opentype"), url("../fonts/labelleaurore/labelleaurore.woff2") format("woff2"), url("../fonts/labelleaurore/labelleaurore.woff") format("woff"), url("../fonts/labelleaurore/labelleaurore.ttf") format("truetype"), url("../fonts/labelleaurore/labelleaurore.svg#labelleauroreregular") format("svg");
  font-weight: normal;
  font-style: italic; }

/*! Generated by Font Squirrel (https://www.fontsquirrel.com) on August 27, 2019 */
@font-face {
  font-family: 'etelkamonospace';
  src: url("../fonts/etelkamonospace/etelkamonospace.eot");
  src: url("../fonts/etelkamonospace/etelkamonospace.eot?#iefix") format("embedded-opentype"), url("../fonts/etelkamonospace/etelkamonospace.woff2") format("woff2"), url("../fonts/etelkamonospace/etelkamonospace.woff") format("woff"), url("../fonts/etelkamonospace/etelkamonospace.ttf") format("truetype"), url("../fonts/etelkamonospace/etelkamonospace.svg#etelkamonospace") format("svg");
  font-weight: normal;
  font-style: normal; }

html {
  height: 100%;
  font-size: 16px;
  color: #ffffff; }

body {
  height: 100%;
  font-family: 'etelkamonospace', monospace;
  overflow-x: hidden; }

h1, h2, h3, h4, h5, h6 {
  margin: 0; }

ul, li {
  list-style-type: none;
  margin: 0;
  padding: 0; }

a {
  text-decoration: none;
  cursor: pointer;
  -webkit-transition: all .3s;
  -o-transition: all .3s;
  transition: all .3s; }

p {
  margin: 0; }

audio,
canvas,
iframe,
img,
svg,
video,
textarea {
  vertical-align: middle; }

textarea {
  resize: none; }

section {
  position: relative; }

input,
select,
button {
  outline: none; }

*, *:before, *:after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

.wrapper {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 100vw;
  height: 100vh;
  min-height: 500px;
  overflow: hidden;
  background-color: #252627; }

.navbar {
  position: relative;
  width: 60px;
  height: 100%;
  min-height: 500px;
  background-color: #181818;
  z-index: 3; }

.main-nav {
  position: absolute;
  top: 30px;
  z-index: 3;
  width: 100%; }

.main-nav ul li a, .contacts-list ul li a {
  display: block;
  height: 51px;
  text-align: center;
  line-height: 51px;
  font-size: 22px;
  color: #4d4d4e; }
  .main-nav ul li a:hover, .contacts-list ul li a:hover {
    color: #00bcd4; }

.contacts-list {
  position: absolute;
  bottom: 30px;
  width: 100%; }
  .contacts-list ul li a {
    height: 31px;
    line-height: 31px;
    font-size: 16px; }

.burger {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
  position: fixed;
  top: 23px;
  right: 20px;
  background: transparent;
  width: 60px;
  cursor: pointer;
  z-index: 3;
  display: none; }
  .burger span {
    display: block;
    width: 60%;
    height: 1px;
    margin-bottom: 6px;
    background: #ffffff;
    -webkit-transition: all .3s ease;
    -o-transition: all .3s ease;
    transition: all .3s ease; }
    .burger span:first-child {
      width: 70%; }
    .burger span:last-child {
      width: 45%; }
  .burger:hover span {
    width: 65%;
    background: #00bcd4; }

@media (max-width: 960px) {
  .navbar {
    position: fixed;
    width: 100%;
    height: 60px;
    min-height: 0; }
  .main-nav {
    top: 58px;
    right: -2000px;
    background-color: #181818;
    -webkit-transition: all .5s ease-out;
    -o-transition: all .5s ease-out;
    transition: all .5s ease-out; }
    .main-nav ul {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -ms-flex-pack: distribute;
          justify-content: space-around; }
  .main-nav.show {
    right: 0; }
  .contacts-list {
    display: none; }
  .tags.tags-top {
    display: none; }
  .burger {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
  .burger.open span {
    width: 70%; }
  .burger.open span:last-child {
    display: none; }
  .burger.open span:first-child {
    -webkit-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
            transform: rotate(45deg);
    margin-bottom: 0; }
  .burger.open span:nth-child(2n) {
    -webkit-transform: rotate(-45deg);
        -ms-transform: rotate(-45deg);
            transform: rotate(-45deg); } }

.home {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  width: calc(100% - 60px);
  padding: 40px 0 0 40px; }

.tags {
  position: absolute; }

.tags-top {
  top: 50px;
  left: 50px; }

.tags-bottom {
  bottom: 50px;
  left: 50px; }

.tags-center {
  display: none; }

.tag {
  display: block;
  font-family: 'labelleaurore', cursive;
  color: #515152;
  font-size: 18px; }

.tag_two {
  padding: 0 0 0 30px; }

.content {
  position: relative; }

.typed-cursor {
  opacity: 1;
  -webkit-animation: blink 0.8s infinite;
          animation: blink 0.8s infinite; }

@keyframes blink {
  0% {
    opacity: 1; }
  50% {
    opacity: 0; }
  100% {
    opacity: 1; } }

@-webkit-keyframes blink {
  0% {
    opacity: 1; }
  50% {
    opacity: 0; }
  100% {
    opacity: 1; } }

@media (max-width: 960px) {
  .home {
    width: 100%; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
